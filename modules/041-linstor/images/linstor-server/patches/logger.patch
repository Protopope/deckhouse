diff --git a/satellite/src/main/java/com/linbit/linstor/core/Satellite.java b/satellite/src/main/java/com/linbit/linstor/core/Satellite.java
index 00b7b1fce..3c026bd8a 100644
--- a/satellite/src/main/java/com/linbit/linstor/core/Satellite.java
+++ b/satellite/src/main/java/com/linbit/linstor/core/Satellite.java
@@ -377,6 +377,7 @@ public final class Satellite
     {
         System.out.printf("%s, Module %s\n", LinStor.PROGRAM, LinStor.SATELLITE_MODULE);
         LinStor.printStartupInfo();
+        System.out.println("TEST FIX-LOGS");
 
         StltConfig cfg = new StltConfig(args);
 
diff --git a/satellite/src/main/java/com/linbit/linstor/layer/storage/utils/Commands.java b/satellite/src/main/java/com/linbit/linstor/layer/storage/utils/Commands.java
index a63c78cba..076d0238f 100644
--- a/satellite/src/main/java/com/linbit/linstor/layer/storage/utils/Commands.java
+++ b/satellite/src/main/java/com/linbit/linstor/layer/storage/utils/Commands.java
@@ -12,10 +12,10 @@ import com.linbit.linstor.storage.StorageException;
 import com.linbit.utils.StringUtils;
 
 import java.io.IOException;
-import java.util.ArrayList;
-import java.util.Collection;
-import java.util.Collections;
-import java.util.List;
+import java.nio.charset.StandardCharsets;
+import java.time.LocalDateTime;
+import java.time.format.DateTimeFormatter;
+import java.util.*;
 
 public class Commands
 {
@@ -76,7 +76,26 @@ public class Commands
         OutputData outData;
         try
         {
+
+            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd/HH:mm:ss");
+            LocalDateTime now = LocalDateTime.now();
+
             outData = extCmd.exec(command);
+            System.out.println( dtf.format(now) +  "  ------- command------------------------");
+            System.out.println(Arrays.toString(command));
+            System.out.println("-----------------------------------------------------");
+            System.out.println( dtf.format(now) +  "------- extCmd.exec outData-------------------------");
+
+            System.out.println("exitCode: " + outData.exitCode);
+
+            String stderrStr = new String(outData.stderrData);
+            System.out.println("stderrData: " + stderrStr);
+
+            String stdoutStr = new String(outData.stdoutData);
+            System.out.println("stdoutData: " + stdoutStr);
+            System.out.println("executedCommand: " + Arrays.toString(outData.executedCommand));
+            System.out.println("----------------------------------------------------------------------");
+
 
             boolean skipExitCodeCheck = false;
             while (!(outData.exitCode == ExtCmdUtils.DEFAULT_RET_CODE_OK || allowExitCodes.contains(outData.exitCode)))
@@ -121,7 +140,6 @@ public class Commands
                 exc
             );
         }
-
         return outData;
     }
 
