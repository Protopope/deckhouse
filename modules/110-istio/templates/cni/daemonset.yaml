{{- if eq $.Values.istio.sidecarInjectionMode "CNIPlugin" }}
{{- $version := get $.Values.istio.globalVersion }}
{{- $versionInfo := get $.Values.istio.internal.versionMap $version }}
{{- $imageSuffix := get $versionInfo "imageSuffix" }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: istio-cni-node
  namespace: d8-istio
  {{- include "helm_lib_module_labels" (list $ (dict "app" "istio-cni-node")) | nindent 2 }}
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: istio-cni-node
  template:
    metadata:
      annotations:
        ambient.istio.io/redirection: disabled
        prometheus.io/path: /metrics
        prometheus.io/port: "15014"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
      labels:
        app: istio-cni-node
        sidecar.istio.io/inject: "false"
    spec:
      imagePullSecrets:
      - name: deckhouse-registry
      containers:
        - args:
            - --log_output_level=default:info
          command:
            - install-cni
          env:
            - name: CNI_NETWORK_CONFIG
              valueFrom:
                configMapKeyRef:
                  key: cni_network_config
                  name: istio-cni-config
            - name: CNI_NET_DIR
              value: /etc/cni/net.d
            - name: CHAINED_CNI_PLUGIN
              value: "true"
            - name: REPAIR_ENABLED
              value: "true"
            - name: REPAIR_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: REPAIR_LABEL_PODS
              value: "true"
            - name: REPAIR_DELETE_PODS
              value: "true"
            - name: REPAIR_RUN_AS_DAEMON
              value: "true"
            - name: REPAIR_SIDECAR_ANNOTATION
              value: sidecar.istio.io/status
            - name: REPAIR_INIT_CONTAINER_NAME
              value: istio-validation
            - name: REPAIR_BROKEN_POD_LABEL_KEY
              value: cni.istio.io/uninitialized
            - name: REPAIR_BROKEN_POD_LABEL_VALUE
              value: "true"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: LOG_LEVEL
              value: debug
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  divisor: "0"
                  resource: limits.memory
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  divisor: "0"
                  resource: limits.cpu
          image: {{ include "helm_lib_module_image" (list $ (printf "cni%s" $imageSuffix)) }}
          imagePullPolicy: IfNotPresent
          name: install-cni
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 8000
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-bin-dir
            - mountPath: /host/etc/cni/net.d
              name: cni-net-dir
            - mountPath: /var/run/istio-cni
              name: cni-log-dir
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      {{- include "helm_lib_priority_class" (tuple . "system-node-critical") | nindent 6 }}
      restartPolicy: Always
      schedulerName: default-scheduler
      {{- include "helm_lib_module_pod_security_context_run_as_user_root" . | nindent 6 }}
      terminationGracePeriodSeconds: 5
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
      volumes:
        - hostPath:
            path: /opt/cni/bin
            type: ""
          name: cni-bin-dir
        - hostPath:
            path: /etc/cni/net.d
            type: ""
          name: cni-net-dir
        - hostPath:
            path: /var/run/istio-cni
            type: ""
          name: cni-log-dir
        - hostPath:
            path: /var/run/netns
            type: ""
          name: cni-netns-dir
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
{{- end }}
