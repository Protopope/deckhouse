---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    heritage: deckhouse
    module: deckhouse
  name: projects.deckhouse.io
spec:
  group: deckhouse.io
  names:
    kind: Project
    listKind: ProjectList
    plural: projects
    singular: project
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: false
      deprecated: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - jsonPath: .status.sync
          name: Ready
          type: boolean
        - jsonPath: .spec.description
          name: Description
          type: string
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                description:
                  description: Arbitrary description of the purpose of the project.
                  type: string
                projectTypeName:
                  description: |
                    The name of the custom resource [ProjectType](cr.html#projecttype) to be used
                    as a template for creating resources for the environment.
                  type: string
                template:
                  additionalProperties:
                    x-kubernetes-preserve-unknown-fields: true
                  description:
                    Values for [resource templates](cr.html#projecttype-v1alpha1-spec-resourcestemplate) from the environment template (CR [ProjectType](cr.html#projecttype) in helm values format that map to the OpenAPI specification (the [openAPI](cr.html#projecttype-v1alpha1-spec-openapi) parameter of the environment template).
                  type: object
            status:
              type: object
              properties:
                message:
                  description: Status message.
                  type: string
                state:
                  description: Summary of the status.
                  type: string
                sync:
                  description: Project definition sync with cluster.
                  type: boolean
    - name: v1alpha2
      served: true
      storage: true
      deprecated: false
      subresources:
        status: {}
      additionalPrinterColumns:
        - jsonPath: .status.sync
          name: Ready
          type: boolean
        - jsonPath: .spec.templateName
          name: Template
          type: string
        - jsonPath: .spec.description
          name: Description
          type: string
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                description:
                  description: Arbitrary description of the purpose of the project.
                  type: string
                templateName:
                  description: |
                    The name of the custom resource [ProjectTemplate](cr.html#projecttemplate) to be used
                    as a template for creating resources for the project.
                  type: string
                templateValues:
                  additionalProperties:
                    x-kubernetes-preserve-unknown-fields: true
                  description:
                    Values for [resources template](cr.html#projecttemplate-v1alpha1-spec-resourcestemplate) from the related [project template](cr.html#projecttemplate) in helm values format according to the [OpenAPI specification](cr.html#projecttemplate-v1alpha1-spec-openapi) defined in the template.
                  type: object
                authorizationRules:
                  description:
                    List of ServiceAccounts, Groups and Users to provide
                    access to the created environment (project).
                  items:
                    oneOf:
                      - properties:
                          kind:
                            enum:
                              - ServiceAccount
                          name: {}
                          namespace: {}
                          role: {}
                        required:
                          - kind
                          - name
                          - namespace
                          - role
                      - properties:
                          kind:
                            enum:
                              - User
                              - Group
                          name: {}
                          role: {}
                        required:
                          - kind
                          - name
                          - role
                    properties:
                      kind:
                        description:
                          Kind of the target resource to apply access to the
                          environment (`ServiceAccount`, `Group` or `User`).
                        enum:
                          - ServiceAccount
                          - User
                          - Group
                        type: string
                      name:
                        description:
                          The name of the target resource to apply access
                          to the environment.
                        minLength: 1
                        type: string
                      namespace:
                        description:
                          The namespace of the target resource to apply environment access to.

                          Required only when using `ServiceAccount` from another namespace.
                        pattern: "[a-z0-9]([-a-z0-9]*[a-z0-9])?"
                        type: string
                      role:
                        description: Role name from [user-authz module](../140-user-authz/cr.html#clusterauthorizationrule-v1-spec-accesslevel)
                        enum:
                          - User
                          - PrivilegedUser
                          - Editor
                          - Admin
                        type: string
                    type: object
                  type: array
                dedicatedNodes:
                  type: object
                  properties:
                    labelSelector:
                      description: A label selector is a label query over a set
                        of resources. The result of matchLabels and matchExpressions
                        are ANDed. An empty label selector matches all objects.
                        A null label selector matches no objects.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty.
                                  This array is replaced during a strategic merge
                                  patch.
                                items:
                                  type: string
                                type: array
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                    tolerations:
                      type: array
                      description: |
                        The same as in the Pods' `spec.tolerations` parameter in Kubernetes.

                        If the parameter is omitted or `false`, it will be determined [automatically](https://deckhouse.io/documentation/v1/#advanced-scheduling).
                      items:
                        type: object
                        properties:
                          effect:
                            type: string
                          key:
                            type: string
                          operator:
                            type: string
                          tolerationSeconds:
                            type: integer
                            format: int64
                          value:
                            type: string   
            status:
              type: object
              properties:
                message:
                  description: Status message.
                  type: string
                state:
                  description: Summary of the status.
                  type: string
                sync:
                  description: Project definition sync with cluster.
                  type: boolean