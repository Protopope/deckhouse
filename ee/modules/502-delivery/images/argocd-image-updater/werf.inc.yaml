{{- $binaries := "/usr/bin/git /bin/bash /bin/sh /usr/bin/perl /usr/bin/ssh /lib64/libnss_*" }}
---
artifact: {{ $.ModuleName }}/{{ $.ImageName }}-binaries-artifact
fromImage: common/alt
shell:
  install:
    - apt-get update
    - apt-get install -y git openssh-clients
    - /binary_replace.sh -i "{{ $binaries }}" -o /relocate
---
artifact: {{ .ModuleName }}/{{ $.ImageName }}-argocd-image-updater-artifact
from: {{ .Images.BASE_GOLANG_20_ALPINE }}
shell:
  install:
    - apk add --no-cache git make
    - mkdir -p /src
    - cd /src
    - git clone --depth 1 -b v0.11.3 https://github.com/werf/3p-argocd-image-updater.git .
    - export GOPROXY={{ $.GOPROXY }}
    - mkdir -p dist
    - make controller
---
image: {{ .ModuleName }}/{{ .ImageName }}
fromImage: common/distroless
import:
  - artifact: {{ .ModuleName }}/{{ $.ImageName }}-argocd-image-updater-artifact
    add: /src/dist/argocd-image-updater
    to: /usr/local/bin/argocd-image-updater
    before: setup
  - artifact: {{ .ModuleName }}/{{ $.ImageName }}-argocd-image-updater-artifact
    add: /src/hack/git-ask-pass.sh
    to: /usr/local/bin/git-ask-pass.sh
    before: setup
  - artifact: {{ $.ModuleName }}/{{ $.ImageName }}-binaries-artifact
    add: /relocate
    to: /
    before: setup
docker:
  ENTRYPOINT: ["/usr/local/bin/argocd-image-updater"]
